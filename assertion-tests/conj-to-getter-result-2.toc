
(defprotocol Pookie
  (pook [_]
    (assert-result r (instance? (list-of (any-of StringBuffer
                                                 SubString))
                                r))))

(deftype Boogie [xs]
  Stringable
  (string-list [_]
    (list "Boogie " (str xs)))

  Pookie
  (pook [_]
    (map xs (fn [n]
              (str (inc n))))))

(main [_]
  (let [bgi (Boogie [1 2 3])]
    (print-err 'pook (pook (.xs bgi (conj (.xs bgi) 'plop))))))
