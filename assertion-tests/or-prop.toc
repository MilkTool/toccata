
(def SomeVal (comp Integer
                   String))

(defn f [x y]
  (assert (instance? SomeVal x))
  (or (and (do
             (print-err 'y (inc y))
             (instance? Integer x))
           (maybe (inc x)))
      (and (do
             (print-err 'y (+ 4 y))
             (instance? String x))
           (maybe (subs x 1)))))

(main [_]
      (println "1)" (f 4 9))
      (println "2)" (f "212" 3))
      (println "3)" (f "212" "34")))
