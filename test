#!/bin/bash

set -e

# $CC -O3 -g -fno-objc-arc -std=c99 -c core.c &&

# git checkout toccata.c &&
# $CC -O3 -g -fno-objc-arc -o toccata -std=c99 core.c toccata.c -lpthread &&

# echo &&
# echo "restored" &&
# echo &&

time `./toccata toccata.toc > new-toc.tmp` &&
awk '/^#$/ { printf "#line %d \"%s\"\n", NR+1, "new-toc.c"; next; } { print; }' new-toc.tmp > new-toc.c &&
$CC -O3 -g -fno-objc-arc -o new-toc -std=c99 core.c new-toc.c -lpthread &&

echo &&
echo "compiled" &&
echo &&

run test.toc &&

# run curr-bug.toc &&
# exit 1 &&

# run regression-tests/test-regressions.toc &&

time `./new-toc scripter.toc > m.tmp` &&
awk '/^#$/ { printf "#line %d \"%s\"\n", NR+1, "scripter.c"; next; } { print; }' m.tmp > scripter.c &&
$CC -g -fno-objc-arc -DCHECK_MEM_LEAK=1 -o scripter -std=c99 core.c scripter.c -lpthread &&
./scripter regression-tests/test-regressions.toc &&

# for git bisect
# status=0
# ./new-toc toccata.toc > new-toc.tmp || status=$?

# if [ "$status" -eq 125 ] || [ "$status" -gt 127 ]; then
#     status=1
# fi
# exit "$status"

# for file in regression-tests/test*.toc
# do
#    echo
#    echo "testing" $file
#    ./test-regression $file
# done &&

# time `./new-toc toccata.toc > new-toc.tmp` &&
# awk '/^#$/ { printf "#line %d \"%s\"\n", NR+1, "new-toc.c"; next; } { print; }' new-toc.tmp > new-toc.c &&
# $CC -O3 -g -fno-objc-arc -o new-toc -std=c99 core.c new-toc.c -lpthread &&

# echo &&
# echo "re-compiled" &&
# echo &&

# time `./new-toc toccata.toc > new-toc.tmp` &&
# awk '/^#$/ { printf "#line %d \"%s\"\n", NR+1, "new-toc.c"; next; } { print; }' new-toc.tmp > new-toc.c &&
# $CC -O3 -g -fno-objc-arc -o new-toc -std=c99 core.c new-toc.c -lpthread &&

# for file in assertion-tests/*.toc
# do
#    echo
#    ./test-assertion $file
# done &&

# for file in runtime-tests/*.toc
# do
#    echo
#    echo "testing" $file
#    ./test-runtime-check $file
# done &&

echo "Regressions pass"
