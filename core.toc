
(defn number-str [n]
  (inline C String "return(integer_str(arg0));"))

(defn number= [x y]
  (inline C Maybe "return(integer_EQ(arg0, arg1));"))


(defn pr* [str]
  ;; Send a string to the current output stream
  ;; (assert (instance? String str))
  (inline C Integer "return(pr_STAR(arg0));"))

(defn maybe [v]
  (inline C Maybe "
    return(maybe((List *)0, (Value *)0, arg0));"))
(def nothing (inline C Maybe "(Value *)&(Maybe){MaybeType, -1, 0}"))

(def empty-list
  (inline C List "(Value *)&(List){ListType,-1,0,0,0}"))

(def empty-vector
  (inline C Vector "(Value *)&(Vector){VectorType,-1,0,5,0,0}"))
