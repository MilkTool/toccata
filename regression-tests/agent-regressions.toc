
(add-ns rt (module "regression-tester.toc"))

(def agt (agent {}))

(def global-x {(inc 0) (symbol "abc")})

(defn inc-agent [agt n]
  (or (= n 0)
      (let [_ (send agt inc)]
        (inc-agent agt (dec n)))))

(defn test []
  (println "Check agent regressions")
  (send agt (fn [m]
              (assoc m (inc 0) (symbol "bogus"))))
  (send agt (fn [m]
              (maybe global-x)))
  (let [agt (agent (inc 0))
        done (promise)
        well-done (promise)
        inc-val (inc 0)]
    (send agt + (inc 0))
    (send agt (fn [x]
                (+ x inc-val)))
    (send agt (fn [x]
                (deliver done x)
                x))
    (rt/test (= (extract done) (extract agt))
             _FILE_ _LINE_)

    (inc-agent agt 6)
    (send agt (fn [x]
                (deliver well-done x)
                x))
    (or (= (extract well-done) (extract agt))
        _FILE_ _LINE_))
  (println "Agents are good"))
