
(defn init [f]
  (inline C "
universalProtoFn = (Value *)f_0;
return(nothing);
"))

(defprotocol TestProto
  (no-default [x y z])
  (with-default [x y]
    'the-default-result))


(defn f [path fn-sym disp-arg & args]
  (print-err 'uni path fn-sym disp-arg args)
  nothing)

(main [_]
  (init f)
  (let [rv (reify
             Stringable
             (string-list [_]
               (list "Howdy"))

             TestProto
             (no-default [x y z]
               (inc 91))
             (with-default [x y]
               (str 'bippity)))]
    
    (or (and (= "bippity" (with-default rv (inc 8)))
             (= 92 (no-default rv (inc 1) (str "a" "b"))))
        (maybe (abort)))

    (print-err 'done)))
