
(defn lcl-split [l n prefix]
  (assert (instance? List prefix))
  ;; TODO: this breaks the compiler
  ;; (extract (or (and (or (empty? l)
  ;;                       (= 0 n))
  ;;                   (maybe [(reverse prefix) l])))
  ;;          (maybe (let [[head & tail] l]
  ;;                   (split tail (dec n) (cons head prefix)))))

  (either (and (or (empty? l)
                     (= 0 n))
                 (maybe [(reverse prefix) l]))
            (let [[head & tail] l]
              (split tail (dec n) (cons head prefix)))))

(main [_]
      (let [x "bogus"]
        (println (or (and (instance? String x)
                          (maybe (subs x 1)))
                     (maybe (inc x))))))
