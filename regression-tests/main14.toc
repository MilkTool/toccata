
(def vect1 (vector (number-str 1) (number-str 2) 3))
(def list1 (list (number-str 4) (number-str 5) 6))

(defn f0 [x y]
  (pr* (number-str x))
  (pr* " ")
  (pr* (number-str y))
  (pr* "\n"))

(defn f1 [x y & z]
  (pr* x)
  (pr* " ")
  (pr* y)
  (pr* "\n")
  (let [[a b] z]
    (pr* (number-str a))
    (pr* " ")
    (pr* (number-str b))
    (pr* "\n")))

(defn f2 [[x y z] & tail]
  (pr* x)
  (pr* " ")
  (pr* "\n"))

(defn f3 [[x y z] & tail]
  (pr* x)
  (pr* " ")
  (pr* y)
  (pr* " ")
  (pr* (number-str z))
  (pr* " ")
  (let [[a b] tail]
    (pr* (number-str a))
    (pr* " ")
    (pr* (number-str b)))
  (pr* "\n"))

(main [_]
      (pr* "Function destructuring\n")
      (f0 1 2)
      (f1 (number-str 1) (number-str 2) 3 4)
      (f2 vect1 10 11)
      (f3 list1 10 11)
      (f3 vect1 10 11)
      (pr* "Vectors and Lists! Oh my!\n"))
