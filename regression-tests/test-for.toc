
(add-ns rt (module "regression-tester.toc"))

(main [_]
      (rt/test (= (maybe 9) (for [x (maybe 8)]
                              (+ x 1)))
               _FILE_ _LINE_)
      (rt/test (= (maybe 17) (for [x (maybe 8)
                                   y (maybe 9)]
                               (+ x y)))
               _FILE_ _LINE_)
      (rt/test (= (maybe 27) (for [x (maybe 8)
                                   :let [z (+ 10 x)]
                                   y (maybe 9)]
                               (+ z y)))
               _FILE_ _LINE_)
      (rt/test (= (maybe 27) (for [x (maybe 8)
                                   y (maybe 9)
                                   :let [z (+ 10 x)]]
                               (+ z y)))
               _FILE_ _LINE_)
      (rt/test (= (maybe 17) (for [x (maybe 8)
                                   :when (maybe 1)
                                   y (maybe 9)]
                               (+ x y)))
               _FILE_ _LINE_)
      (rt/test (= (maybe 17) (for [x (maybe 8)
                                   y (maybe 9)
                                   :when (maybe 1)]
                               (+ x y)))
               _FILE_ _LINE_)
      (rt/test (= nothing (for [x (maybe 8)
                                :when nothing
                                y (maybe 9)]
                            (+ x y)))
               _FILE_ _LINE_)
      (rt/test (= nothing (for [x (maybe 8)
                                y (maybe 9)
                                :when nothing]
                            (+ x y)))
               _FILE_ _LINE_)
      (rt/test (= (maybe 27) (for [x (maybe 8)
                                   y (maybe 9)
                                   :when (maybe 1)
                                   :let [z (+ x 10)]]
                               (+ z y)))
               _FILE_ _LINE_)
      (rt/test (= (maybe 27) (for [x (maybe 8)
                                   y (maybe 9)
                                   :let [z (+ x 10)]
                                   :when (maybe 1)]
                               (+ z y)))
               _FILE_ _LINE_)
      (rt/test (= nothing (for [x (maybe 8)
                                y (maybe 9)
                                :when nothing
                                :let [z (+ x 10)]]
                            (+ z y)))
               _FILE_ _LINE_)
      (rt/test (= nothing (for [x (maybe 8)
                                y (maybe 9)
                                :let [z (+ x 10)]
                                :when nothing]
                            (+ z y)))
               _FILE_ _LINE_)
      (rt/test (= (maybe 17) (for [x (maybe 8)
                                   :when-not nothing
                                   y (maybe 9)]
                               (+ x y)))
               _FILE_ _LINE_)
      (rt/test (= (maybe 17) (for [x (maybe 8)
                                   y (maybe 9)
                                   :when-not nothing]
                               (+ x y)))
               _FILE_ _LINE_)
      (rt/test (= nothing (for [x (maybe 8)
                                :when-not (maybe 1)
                                y (maybe 9)]
                            (+ x y)))
               _FILE_ _LINE_)
      (rt/test (= nothing (for [x (maybe 8)
                                y (maybe 9)
                                :when-not (maybe 1)]
                            (+ x y)))
               _FILE_ _LINE_)
      (rt/test (= (maybe 27) (for [x (maybe 8)
                                   y (maybe 9)
                                   :when-not nothing
                                   :let [z (+ x 10)]]
                               (+ z y)))
               _FILE_ _LINE_)
      (rt/test (= (maybe 27) (for [x (maybe 8)
                                   y (maybe 9)
                                   :let [z (+ x 10)]
                                   :when-not nothing]
                               (+ z y)))
               _FILE_ _LINE_)
      (rt/test (= nothing (for [x (maybe 8)
                                y (maybe 9)
                                :when-not (maybe 1)
                                :let [z (+ x 10)]]
                            (+ z y)))
               _FILE_ _LINE_)
      (rt/test (= nothing (for [x (maybe 8)
                                y (maybe 9)
                                :let [z (+ x 10)]
                                :when-not (maybe 1)]
                            (+ z y)))
               _FILE_ _LINE_)
      (println "'for' is good"))
